name: Build

on: 
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get install -y mosquitto mosquitto-clients
      - name: Cargo clippy
        run: cargo clippy
      - name: Cargo test
        run: cargo test --verbose
        env:
          RUST_TEST_THREADS: 1
      - name: Cargo build
        run: cargo build --release
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mosquitto-jwt-auth-ubuntu
          path: ./target/release/libmosquitto_jwt_auth.so

  build-alpine:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v2
      - name: Set up Alpine
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker pull alpine:latest
      - name: Build in Alpine
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace alpine:latest /bin/sh -c "
          apk add --no-cache build-base musl-dev openssl-dev curl &&
          curl https://sh.rustup.rs -sSf | sh -s -- -y &&
          source $HOME/.cargo/env &&
          cargo build --release"
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mosquitto-jwt-auth-alpine
          path: ./target/release/libmosquitto_jwt_auth.so
